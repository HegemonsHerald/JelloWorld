
ECLIPSE SHORTCUTS
opt+cmd+j	generate javadoc for the thing you're in!




task 1

 - static final months = { "January", "... };

 - isLeapYear
    - 4 | year && ((100 !| year) || (400 | year))

 - getDaysInMonth
    - check for month bounds
    - check for february: leap-year

 - validate
    - getDaysInMonth
       - if you get 0 your month is bad
    - if day is larger than previous or smaller than 1 it's bad

 - constructor
    - validate input
    - throw exception if month is bad or day is bad

 - generate getters with Eclipse

 - dayOfYear
    - add up the months up to but excluding this.month
    - add days on top

 - sameYearDiff
    - is this.year == other.year? -> return 0 if not
    - this.dayOfYear - other.dayOfYear

 - monthToString
    - array of months, returns the element with the index this.month-1

 - toString
return (this.monthToString() + " " + this.month + ", " + this.year).toString()

task 2

 - the .sub() method has to return a new HandyInt for the provided code piece to run accurately


task 3

 - getInput()
    - do while til you get valid input
 - create array with a length of N - 3 (-2 for the range and -1 for the indexing)
 - loop over array -> for loop shorthand syntax
    - if value == 0 continue
    - test with isPrime()
    - if prime
       - print to output
       - for-loop: all multiples of prime, until multiple is greater than array.length
          - set those indices to 0


task 4

 - area = 0

 - loop lower_interval_bound <= x < upper_interval_bound
    - area1 = min_rect(x)
    - area2 = max_rect(x+=step_size)
    - delta_area = (area1 + area2) / 2
    - area += delta_area
